on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
name: Continuous Integration

jobs:
    test:
        name: Test Suite ${{ matrix.job.target }}
        runs-on: ${{ matrix.job.os }}
        strategy:
            matrix:
                rust: [stable]
                job:
                    - os: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                      use-cross: true
                    - os: ubuntu-latest
                      target: i686-unknown-linux-gnu
                      use-cross: true
                    - os: ubuntu-latest
                      target: arm-unknown-linux-gnueabi
                      use-cross: true
                    - os: ubuntu-latest
                      target: armv7-unknown-linux-gnueabihf
                      use-cross: true
                    - os: ubuntu-latest
                      target: mips-unknown-linux-gnu
                      use-cross: true
                    - os: ubuntu-latest
                      target: mips64-unknown-linux-gnuabi64
                      use-cross: true
                    - os: ubuntu-latest
                      target: mips64el-unknown-linux-gnuabi64
                      use-cross: true
                    - os: ubuntu-latest
                      target: mipsel-unknown-linux-gnu
                      use-cross: true
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      use-cross: true
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Install libcec
              run: sudo apt-get install libcec4 libcec-dev pkg-config
            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.rust }}
                  profile: minimal
                  target: ${{ matrix.job.target }}
                  override: true
            - name: Cargo test
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  use-cross: ${{ matrix.job.use-cross }}
                  toolchain: ${{ matrix.rust }}
                  args: --target ${{ matrix.job.target }}

    rustfmt:
        name: Rustfmt
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Install libcec
              run: sudo apt-get install libcec4 libcec-dev pkg-config
            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
                  components: rustfmt
            - name: Check formatting
              uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: --all -- --check

    clippy:
        name: Clippy
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Install libcec
              run: sudo apt-get install libcec4 libcec-dev pkg-config
            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
                  target: x86_64-unknown-linux-gnu
                  components: clippy
            - name: Clippy Check
              uses: actions-rs/cargo@v1
              with:
                  use-cross: true
                  command: clippy
                  args: -- --target x86_64-unknown-linux-gnu -D warnings

    coverage:
        name: Code coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Update apt
              run: sudo apt-get update
            - name: Install dependencies for build and coverage
              run: sudo apt-get install libudev-dev libcec4 libcec-dev pkg-config libp8-platform-dev
            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
            - name: Run cargo-tarpaulin
              uses: actions-rs/tarpaulin@v0.1.3
              with:
                  args: "--ignore-tests --out Lcov"
            - name: Upload to Coveralls
              # upload only if push
              if: ${{ github.event_name == 'push' }}
              uses: coverallsapp/github-action@master
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  path-to-lcov: "./lcov.info"
